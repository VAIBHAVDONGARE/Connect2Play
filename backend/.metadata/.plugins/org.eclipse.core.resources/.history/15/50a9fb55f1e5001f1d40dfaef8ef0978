package com.connect2play.dto;

import java.time.LocalDateTime;

import com.connect2play.entities.Notification;
import com.connect2play.entities.NotificationType;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
public class NotificationResponseDTO extends BaseDTO {
	private NotificationType type;
	private String title;
	private String message;
	private Long SenderId;
	private Long relatedId;
	private Boolean isRead;
	private LocalDateTime sentTime;
	private LocalDateTime readAt;
	private String relatedType;
	// Flag for soft deletion.
	private Boolean isDeleted;

	public NotificationResponseDTO(Long id, NotificationType type, String title, String message, Long senderId,
			Long relatedId, String relatedType, Boolean isRead, LocalDateTime sentTime, LocalDateTime readAt,
			Boolean isDeleted) {
		super(id); // Assuming BaseDTO has an ID field
		this.type = type;
		this.title = title;
		this.message = message;
		this.SenderId = senderId;
		this.relatedId = relatedId;
		this.relatedType = relatedType;
		this.isRead = isRead;
		this.sentTime = sentTime;
		this.readAt = readAt;
		this.isDeleted = isDeleted;
	}

	public NotificationResponseDTO(Notification notification) {

		super(notification.getId()) ;
		this.type = notification.getType();
		this.title = notification.getTitle();
		this.message = notification.getMessage();
		this.SenderId = notification.getSenderId(); //!= null ? notification.getSenderId().getId() : null;
		this.relatedId = notification.getRelatedId();
		this.isRead = notification.isRead();
		this.sentTime = notification.getSentTime();
		this.readAt = notification.getReadAt();
		this.isDeleted = notification.isDeleted();
	}

}
